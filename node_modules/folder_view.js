var events = require('events');
var fs = require('fs');
var path = require('path');
var jade = require('jade');
var util = require('util');
var mime = require('mime');

// Template engine
var gen_files_view = jade.compile([
	'- each file in files',
	'  tr.file(data-path="#{file.path}")  ',
	'    td',
	'      .icon',
	'        img(src="icons/#{file.type}.png")',
	'      .name.detail #{file.name}',
	'    td.detail.cap #{file.type}',
	// '    td.detail #{file.created}',
].join('\n'));

// Our type
function Folder(jquery_element) {
	events.EventEmitter.call(this);
	this.element = jquery_element;


	var self = this;
	// Click on blank
	this.element.parent().on('click', function() {
		$('#context_dropdown').hide();
		self.element.find('.focus').removeClass('focus');
	});
	// Click on file
	this.element.delegate('.file', 'click', function(e) {
		currentFocus = 'files';
		self.element.find('.focus').removeClass('focus');
		$(this).addClass('focus');
		$('#context_dropdown').hide();
		e.stopPropagation();
	});
	// Double click on file
	this.element.delegate('.file', 'dblclick', function() {
		currentFocus = 'files';
		var file_path = $(this).attr('data-path');
		self.emit('navigate', file_path, mime.stat(file_path));
	});

	this.element.delegate('.file', 'contextmenu', function(e) {
		self.element.find('.focus').removeClass('focus');
		$(this).addClass('focus');

		currentFocus = 'contextmenu';
		var pos = $(this).offset();

		var $context_dropdown = $('#context_dropdown');
		$context_dropdown.show();
		$context_dropdown.offset({
			top: pos.top,
			left: pos.left
		});
		$context_dropdown.attr('data-path', $(this).attr('data-path'));

		// TODO
		// 1. hide on scroll etc.
		e.stopPropagation();
	});
}

util.inherits(Folder, events.EventEmitter);

Folder.prototype.open = function(dir) {
	var self = this;
	fs.readdir(dir, function(error, files) {
		if (error) {
			console.log(error);
			return;
		}
		var name = '';
		try {
			var out = [];
			for (var i = 0; i < files.length; ++i) {
				name = path.join(dir, files[i]);
				var s = fs.statSync(name);
				// console.log(out.join('\n'));
				// dev: 2056
				// mode: 16877
				// nlink: 3
				// uid: 1000
				// gid: 1000
				// rdev: 0
				// blksize: 4096
				// ino: 306814
				// size: 4096
				// blocks: 8
				// atime: Sat Sep 26 2015 23:12:22 GMT+0530 (IST)
				// mtime: Fri Sep 25 2015 13:08:14 GMT+0530 (IST)
				// ctime: Fri Sep 25 2015 13:08:14 GMT+0530 (IST)
				// birthtime: Fri Sep 25 2015 13:08:14 GMT+0530 (IST)

				files[i] = mime.stat(name);
			}
		} catch (e) {
			console.log(e.stack);
		}



		var view = gen_files_view({
			files: files
		});
		self.element.html(view);
	});
};

exports.Folder = Folder;
